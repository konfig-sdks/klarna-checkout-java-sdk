/*
 * Klarna Checkout API V3
 * The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Checkbox;
import com.konfigthis.client.model.CheckboxV2;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for Options
 */
public class OptionsTest {
    private final Options model = new Options();

    /**
     * Model tests for Options
     */
    @Test
    public void testOptions() {
        // TODO: test Options
    }

    /**
     * Test the property 'requireValidateCallbackSuccess'
     */
    @Test
    public void requireValidateCallbackSuccessTest() {
        // TODO: test requireValidateCallbackSuccess
    }

    /**
     * Test the property 'acquiringChannel'
     */
    @Test
    public void acquiringChannelTest() {
        // TODO: test acquiringChannel
    }

    /**
     * Test the property 'vatRemoved'
     */
    @Test
    public void vatRemovedTest() {
        // TODO: test vatRemoved
    }

    /**
     * Test the property 'allowSeparateShippingAddress'
     */
    @Test
    public void allowSeparateShippingAddressTest() {
        // TODO: test allowSeparateShippingAddress
    }

    /**
     * Test the property 'colorButton'
     */
    @Test
    public void colorButtonTest() {
        // TODO: test colorButton
    }

    /**
     * Test the property 'colorButtonText'
     */
    @Test
    public void colorButtonTextTest() {
        // TODO: test colorButtonText
    }

    /**
     * Test the property 'colorCheckbox'
     */
    @Test
    public void colorCheckboxTest() {
        // TODO: test colorCheckbox
    }

    /**
     * Test the property 'colorCheckboxCheckmark'
     */
    @Test
    public void colorCheckboxCheckmarkTest() {
        // TODO: test colorCheckboxCheckmark
    }

    /**
     * Test the property 'colorHeader'
     */
    @Test
    public void colorHeaderTest() {
        // TODO: test colorHeader
    }

    /**
     * Test the property 'colorLink'
     */
    @Test
    public void colorLinkTest() {
        // TODO: test colorLink
    }

    /**
     * Test the property 'dateOfBirthMandatory'
     */
    @Test
    public void dateOfBirthMandatoryTest() {
        // TODO: test dateOfBirthMandatory
    }

    /**
     * Test the property 'shippingDetails'
     */
    @Test
    public void shippingDetailsTest() {
        // TODO: test shippingDetails
    }

    /**
     * Test the property 'titleMandatory'
     */
    @Test
    public void titleMandatoryTest() {
        // TODO: test titleMandatory
    }

    /**
     * Test the property 'additionalCheckbox'
     */
    @Test
    public void additionalCheckboxTest() {
        // TODO: test additionalCheckbox
    }

    /**
     * Test the property 'nationalIdentificationNumberMandatory'
     */
    @Test
    public void nationalIdentificationNumberMandatoryTest() {
        // TODO: test nationalIdentificationNumberMandatory
    }

    /**
     * Test the property 'additionalMerchantTerms'
     */
    @Test
    public void additionalMerchantTermsTest() {
        // TODO: test additionalMerchantTerms
    }

    /**
     * Test the property 'phoneMandatory'
     */
    @Test
    public void phoneMandatoryTest() {
        // TODO: test phoneMandatory
    }

    /**
     * Test the property 'radiusBorder'
     */
    @Test
    public void radiusBorderTest() {
        // TODO: test radiusBorder
    }

    /**
     * Test the property 'allowedCustomerTypes'
     */
    @Test
    public void allowedCustomerTypesTest() {
        // TODO: test allowedCustomerTypes
    }

    /**
     * Test the property 'showSubtotalDetail'
     */
    @Test
    public void showSubtotalDetailTest() {
        // TODO: test showSubtotalDetail
    }

    /**
     * Test the property 'additionalCheckboxes'
     */
    @Test
    public void additionalCheckboxesTest() {
        // TODO: test additionalCheckboxes
    }

    /**
     * Test the property 'verifyNationalIdentificationNumber'
     */
    @Test
    public void verifyNationalIdentificationNumberTest() {
        // TODO: test verifyNationalIdentificationNumber
    }

    /**
     * Test the property 'autoCapture'
     */
    @Test
    public void autoCaptureTest() {
        // TODO: test autoCapture
    }

    /**
     * Test the property 'requireClientValidation'
     */
    @Test
    public void requireClientValidationTest() {
        // TODO: test requireClientValidation
    }

    /**
     * Test the property 'enableDiscountModule'
     */
    @Test
    public void enableDiscountModuleTest() {
        // TODO: test enableDiscountModule
    }

    /**
     * Test the property 'showVatRegistrationNumberField'
     */
    @Test
    public void showVatRegistrationNumberFieldTest() {
        // TODO: test showVatRegistrationNumberField
    }

}
