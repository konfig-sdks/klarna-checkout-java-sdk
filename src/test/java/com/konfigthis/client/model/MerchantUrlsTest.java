/*
 * Klarna Checkout API V3
 * The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for MerchantUrls
 */
public class MerchantUrlsTest {
    private final MerchantUrls model = new MerchantUrls();

    /**
     * Model tests for MerchantUrls
     */
    @Test
    public void testMerchantUrls() {
        // TODO: test MerchantUrls
    }

    /**
     * Test the property 'terms'
     */
    @Test
    public void termsTest() {
        // TODO: test terms
    }

    /**
     * Test the property 'checkout'
     */
    @Test
    public void checkoutTest() {
        // TODO: test checkout
    }

    /**
     * Test the property 'confirmation'
     */
    @Test
    public void confirmationTest() {
        // TODO: test confirmation
    }

    /**
     * Test the property 'push'
     */
    @Test
    public void pushTest() {
        // TODO: test push
    }

    /**
     * Test the property 'validation'
     */
    @Test
    public void validationTest() {
        // TODO: test validation
    }

    /**
     * Test the property 'notification'
     */
    @Test
    public void notificationTest() {
        // TODO: test notification
    }

    /**
     * Test the property 'cancellationTerms'
     */
    @Test
    public void cancellationTermsTest() {
        // TODO: test cancellationTerms
    }

    /**
     * Test the property 'shippingOptionUpdate'
     */
    @Test
    public void shippingOptionUpdateTest() {
        // TODO: test shippingOptionUpdate
    }

    /**
     * Test the property 'addressUpdate'
     */
    @Test
    public void addressUpdateTest() {
        // TODO: test addressUpdate
    }

    /**
     * Test the property 'countryChange'
     */
    @Test
    public void countryChangeTest() {
        // TODO: test countryChange
    }

}
